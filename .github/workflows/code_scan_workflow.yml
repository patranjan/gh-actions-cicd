name: CI-Polaris-Basic 
on:
  push:
    branches: [ main, master, develop, stage, release ]
  pull_request:
    branches: [ main, master, develop, stage, release ]
  workflow_dispatch:
  
jobs:
  build:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Polaris Scan
        uses: synopsys-sig/synopsys-action@v1.11.0
        with:
          ### SCANNING: Required fields
          polaris_server_url: ${{ vars.POLARIS_SERVER_URL }}
          polaris_access_token: ${{ secrets.POLARIS_ACCESS_TOKEN }}
          polaris_assessment_types: "SCA,SAST"
          
          ### SCANNING: Optional fields
          # polaris_application_name: ${{ github.event.repository.name }}
          # polaris_project_name: ${{ github.event.repository.name }}
          
          ### PULL REQUEST COMMENTS: Uncomment below to enable
          # polaris_prComment_enabled: true 
          # github_token: ${{ secrets.GITHUB_TOKEN }} # Required when PR comments is enabled

          ### SARIF report parameters
          polaris_reports_sarif_create: true
          #polaris_upload_sarif_report: true
          polaris_reports_sarif_file_path: './dist-scan/report.json' # File path (including file name) where SARIF report is created.

          ### SARIF report severities
          # polaris_reports_sarif_severities: "CRITICAL,HIGH"
          
          ### Signature scan
          #polaris_test_sca_type: "SCA-SIGNATURE"


      

      - name: Read json-1
        id: read-json-1
        run: |
          critical_issues=$(jq '.issues[] | select(.severity == "HIGH")' ./dist-scan/report.json | wc -l)
          if [ $critical_issues -gt 0 ]; then
            echo "Critical issues found: $critical_issues"
            exit 1
          else
            echo "No critical issues found."
          fi

      - name: Check for file
        id: file_check
        run: |
          if git status -s | grep -x "** [report.json]"; then
            echo "check_result=true" >> $GITHUB_OUTPUT
          else
            echo "check_result=false" >> $GITHUB_OUTPUT
          fi
